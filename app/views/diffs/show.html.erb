<div class="d-flex p-2" style="position: sticky; z-index: 1000; top: 0px;">
  <label class="label mr-2 mt-1">Jump </label>
  <div class="btn-group" role="group" aria-label="First group">
    <button id="next" class="btn btn-secondary">Next</button>
    <button id="prev" class="btn btn-secondary">Prev</button>
  </div>
</div>

<p id="notice"><%= notice %></p>

<div id="diff_html"></div>
<div id="diff_string" style="display:none"><%= @diff.content.html_safe %></div>

<%= link_to 'Edit', edit_diff_path(@diff) %> |
<%= link_to 'Back', diffs_path %>

<script type="text/javascript">
  // diff2htmlを表示する
  $(function() {
    // base template ref: https://github.com/rtfpessoa/diff2html/blob/master/src/templates/side-by-side-file-diff.mustache
    // anchor をつける際、左右を判別するため data-side を追加した
    var rawTemplates = {
      'side-by-side-file-diff': (function () {/*
        <div id="{{fileHtmlId}}" class="d2h-file-wrapper" data-lang="{{file.language}}">
            <div class="d2h-file-header">
              {{{filePath}}}
            </div>
            <div class="d2h-files-diff">
                <div class="d2h-file-side-diff" data-side="left">
                    <div class="d2h-code-wrapper">
                        <table class="d2h-diff-table">
                            <tbody class="d2h-diff-tbody">
                            {{{diffs.left}}}
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="d2h-file-side-diff" data-side="right">
                    <div class="d2h-code-wrapper">
                        <table class="d2h-diff-table">
                            <tbody class="d2h-diff-tbody">
                            {{{diffs.right}}}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        */}).toString().match(/(?:\/\*(?:[\s\S]*?)\*\/)/).pop().replace(/^\/\*/, "").replace(/\*\/$/, "")
    };
    var diff_string = document.getElementById("diff_string").innerText
    var diffHtml = Diff2Html.getPrettyHtml(
      diff_string,
      {inputFormat: 'diff', showFiles: true, matching: 'lines', outputFormat: 'side-by-side', rawTemplates: rawTemplates }
    );
    document.getElementById("diff_html").innerHTML = diffHtml;
  });

  // 差分のある行全てにアンカーをつける(side-by-side表示のrightの行番号にのみアンカーをつける)
  $(function() {
    $(".d2h-file-wrapper").each(function(index, element) {
      var prev = null;
      $(this).find(".d2h-file-side-diff[data-side='right'] .d2h-code-side-linenumber.d2h-ins,.d2h-file-side-diff[data-side='right'] .d2h-code-side-linenumber.d2h-change").each(function(index, element) {
        var line_num = Number($(this).text());
        var anchor = $(`<a name="r_${line_num}" id="r_${line_num}" />`);
        if (prev != null) {
          anchor.attr('data-prev-change', prev.attr("name"));
          $(`#${prev.attr('id')}`).attr('data-next-change', anchor.attr("name"));
        }
        $(this).wrapInner(anchor);
        prev = anchor;
      });
    });
  });
  
  // 現在の差分行にスタイルを適用する
  $(function() {
    // 現在の差分行へ適用したスタイルを全て取り除く
    function clearClassFromAllActiveLine() {
      $(".dcs-active-line").removeClass("dcs-active-line");
    }
    
    // 現在の差分行へスタイルを適用する
    function setActiveLineClass() {
      var currentAnchorName = location.hash.replace(/^#/, '');
      if (currentAnchorName === '') {
        return;
      }
      var activeTr = $(`a#${currentAnchorName}`).parents("tr");
      if (!activeTr) {
        return;
      }
      activeTr.addClass("dcs-active-line");
    }

    // アンカー変更時にスタイルを再適用する
    function handleHashChange() {
      clearClassFromAllActiveLine();
      setActiveLineClass();
    }

    handleHashChange();
    window.onhashchange = handleHashChange;
  });

  // 差分へ移動するボタンを有効化する
  $(function() {
    'use strict';

    // 次の差分を表示させる
    function onClickNext(event) {
      var currentAnchorName = location.hash.replace(/^#/, '');
      var nextAnchor = null;
      if (currentAnchorName === '') {
        var nextAnchor = $(`.d2h-file-side-diff[data-side='right'] a[name^=r_]`).first().attr('name');
      } else {
        var currentAnchor = $(`#${currentAnchorName}`);
        if (!currentAnchor) {
          return;
        }
        nextAnchor = currentAnchor.attr('data-next-change');
      }

      if (!nextAnchor) {
        return;
      }
      location.href = `#${nextAnchor}`;
    }

    // 前の差分を表示させる
    function onClickPrev(event) {
      var currentAnchorName = location.hash.replace(/^#/, '');
      var nextAnchor = null;
      if (currentAnchorName === '') {
        var nextAnchor = $(`.d2h-file-side-diff[data-side='right'] a[name^=r_]`).last().attr('name');
      } else {
        var currentAnchor = $(`#${currentAnchorName}`);
        if (!currentAnchor) {
          return;
        }
        nextAnchor = currentAnchor.attr('data-prev-change');
      }

      if (!nextAnchor) {
        return;
      }
      location.href = `#${nextAnchor}`;
    }

    $("#next").bind("click", onClickNext);
    $("#prev").bind("click", onClickPrev);
  });
  
  // コメント追加機能
  $(function() {
    // コメントフォームを挿入する
    function onClickAddComment() {
      var activeTr = $(this).parents("tr");
      if (!activeTr) {
        return;
      }

      var addCommentFormStr = '<form class="addComment">'
        + '<div class="card">'
        + '<div class="card-header">Comment</div>'
        + '<div class="card-body">'
        + '<div class="form-group"><textarea class="form-control" id="comment" placeholder="Leave a comment"></textarea></div>'
        + '<button class="btn btn-outline-secondary mr-2">Cancel</button>'
        + '<button type="submit" class="btn btn-success">Submit</button>'
        + '</div>'
        + '</div>'
        + '</form>';
      activeTr.after('<tr><td colspan="2">' + addCommentFormStr + '</td></tr>');
      $("form.addComment button:contains('Cancel')").bind('click', function() {
        var tr = $(this).parents("tr");
        if (!tr) {
          return;
        }
        tr.remove();
      });
    }

    // コメントフォームの挿入ボタンを各行に配置する(通常は非表示でマウスオーバした時のみ表示する)
    $(".d2h-file-wrapper").each(function(index, element) {
      $(this).find(".d2h-file-side-diff[data-side='right'] .d2h-code-side-linenumber").each(function(index, element) {
        var lineNum = Number($(this).text());
        var codeLine = $(this).next();
        if (!codeLine) {
          return;
        }
        addCommentBtn = $("<button class='btn dcs-add-comment'>&#43;</button>");
        addCommentBtn.css("visibility", "hidden");
        addCommentBtn.bind("click", onClickAddComment);
        codeLine.prepend(addCommentBtn);
        codeLine.hover(
          function() {
            var addCommentBtn = $(this).children(".dcs-add-comment");
            if (!addCommentBtn) {
              return;
            }
            addCommentBtn.css("visibility", "visible");
          },
          function() {
            var addCommentBtn = $(this).children(".dcs-add-comment");
            if (!addCommentBtn) {
              return;
            }
            addCommentBtn.css("visibility", "hidden");
          }
        );
      });
    });
  });
</script>
